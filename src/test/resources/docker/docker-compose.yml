version: '3.9'

services:
  mysql:
    image: mysql:5.7.33
    restart: always
    command: --port=3308
    environment:
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=biostudies
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  mongo:
    image: mongo:4.0.10
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.runCommand({ ping: 1 })" ]
      interval: 30s
      timeout: 30s
      retries: 3

  rabbitmq:
    image: rabbitmq:3.10-management
    volumes:
      - ./rabbitmq-container.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "ping" ]
      interval: 30s
      timeout: 30s
      retries: 3

  biostudies:
    image: dockerhub.ebi.ac.uk/jcamilorada/biostudies-backend-service/submitter:b7c1e503bc0e93356b26e63d8f8b153c9fb3e847
    command: docker login dockerhub.ebi.ac.uk -u $USER -p $PASSWORD
    environment:
      - SERVER_PORT=8081

      # mongo
      - SPRING_DATA_MONGODB_DATABASE=biostudies-mongo-container
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017

      # mysql and jpa
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3308/biostudies
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=1234

      # rabbitmq
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=test
      - SPRING_RABBITMQ_PASSWORD=test
      - SPRING_RABBITMQ_PORT=5673

      # app
      - APP_SUBMISSIONPATH=/directories/submission
      - APP_FTPPATH=/directories/ftp
      - APP_TEMPDIRPATH=/directories/temp
      - APP_REQUESTFILESPATH=/directories/requestFiles
      - APP_FIRETEMPDIRPATH=/directories/fireTemp

      - APP_SECURITY_TOKENHASH=saltNpepper
      - APP_SECURITY_FILESDIRPATH=/directories/files
      - APP_SECURITY_MAGICDIRPATH=/directories/magic
      - APP_SECURITY_REQUIREACTIVATION=false

      - APP_PERSISTENCE_ENABLEFIRE=false
    volumes:
      - ${ENV_DIRECTORIES}:/directories
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy
